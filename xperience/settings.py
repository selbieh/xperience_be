"""
Django settings for xperience project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import environ
import os
from datetime import timedelta
from django.utils.translation import gettext_lazy as _
from firebase_admin import initialize_app

env = environ.Env()
env.read_env()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG= env.bool("DEBUG", default=False)

SECRET_KEY = env("SECRET_KEY")

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders",
    'storages',
    "phonenumber_field",
    "rest_framework",
    "rest_framework.authtoken",
    'rest_framework_simplejwt',
    "drfpasswordless",
    'django_filters',
    "drf_standardized_errors",
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'modeltranslation',
    "fcm_django",
    "base",
    "users",
    "services",
    "reservations",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
    "EXCEPTION_HANDLER": "drf_standardized_errors.handler.exception_handler",
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

DRF_STANDARDIZED_ERRORS = {"ENABLE_IN_DEBUG_FOR_UNHANDLED_EXCEPTIONS": True}

PASSWORDLESS_AUTH = {
    "PASSWORDLESS_AUTH_TYPES": ["MOBILE"],
    "PASSWORDLESS_USER_MOBILE_FIELD_NAME": "mobile",
    "PASSWORDLESS_MOBILE_NOREPLY_NUMBER": "+14793485743",
}

TWILIO_ACCOUNT_SID = env("TWILIO_ACCOUNT_SID")
TWILIO_AUTH_TOKEN = env("TWILIO_AUTH_TOKEN")
TWILIO_PHONE_NUMBER = env("TWILIO_PHONE_NUMBER")


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    #"django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "xperience.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "xperience.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {"default": env.db("DATABASE_URL")}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True 

LANGUAGES = [
    ("en", _("English")),
    ("ar", _("Arabic")),
]


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "users.User"

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=45)
}


CORS_ALLOW_ALL_ORIGINS = True

FIREBASE_APP = initialize_app()

FCM_DJANGO_SETTINGS = {
    "DEFAULT_FIREBASE_APP": FIREBASE_APP,
    "ONE_DEVICE_PER_USER": False,
    "DELETE_INACTIVE_DEVICES": False,
}



Django_AWS_STORAGE_BUCKET_NAME = env('Django_AWS_STORAGE_BUCKET_NAME')
Django_AWS_S3_REGION_NAME = env("Django_AWS_S3_REGION_NAME")
Django_AWS_S3_CUSTOM_DOMAIN = f'{Django_AWS_STORAGE_BUCKET_NAME}.{Django_AWS_S3_REGION_NAME}.digitaloceanspaces.com'
Django_AWS_ACCESS_KEY_ID = env('Django_AWS_ACCESS_KEY_ID')
Django_AWS_SECRET_ACCESS_KEY = env('Django_AWS_SECRET_ACCESS_KEY')

STORAGES = {
    "default": {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
          "bucket_name": Django_AWS_STORAGE_BUCKET_NAME,
          "region_name": Django_AWS_S3_REGION_NAME,
          "endpoint_url": f"https://{Django_AWS_S3_CUSTOM_DOMAIN}",
          "access_key": Django_AWS_ACCESS_KEY_ID,
          "secret_key": Django_AWS_SECRET_ACCESS_KEY,
          "querystring_auth": False,
          "default_acl": "public-read-write" 
        },
    },
        "staticfiles": {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
          "bucket_name": Django_AWS_STORAGE_BUCKET_NAME,
          "region_name": Django_AWS_S3_REGION_NAME,
          "endpoint_url": f"https://{Django_AWS_S3_CUSTOM_DOMAIN}",
          "access_key": Django_AWS_ACCESS_KEY_ID,
          "secret_key": Django_AWS_SECRET_ACCESS_KEY,
          "querystring_auth": False,
          "default_acl": "public-read-write" 
        },
    },
}


STATIC_ROOT = os.path.join(BASE_DIR, 'static')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATIC_URL = f'https://{Django_AWS_S3_CUSTOM_DOMAIN}/static/'
MEDIA_URL = f'https://{Django_AWS_S3_CUSTOM_DOMAIN}/media/'

CORS_ALLOWED_ORIGINS = [
    "https://api.xperiences.vip",
    "https://dashboard.xperiences.vip"
]
